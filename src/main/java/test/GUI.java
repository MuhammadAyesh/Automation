package test;

import pageElements.Tags;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.ArrayList;

/**
 * @author mayesh
 */
public class GUI extends JFrame {

    private JComboBox<Object> action;
    private JButton addButton;
    private JComboBox<Object> stringType;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JScrollPane jScrollPane1;
    private JTextField valueField;
    private JTable table;
    private JTextField textField;
    private JLabel textLabel;
    private JTextField verificationMessageField;


    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        table = new JTable();
        action = new JComboBox<Object>();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        stringType = new JComboBox<Object>();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        addButton = new JButton();
        valueField = new JTextField();
        verificationMessageField = new JTextField();
        textField = new JTextField();
        textLabel = new JLabel();


        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jScrollPane1.setViewportView(table);

        table.setModel(new DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Action", "String type", "Value", "Verification Message", "Other"
                }
        ));


        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("Action");
        jLabel1.setHorizontalTextPosition(SwingConstants.CENTER);

        jLabel2.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel2.setText("String Type");
        jLabel2.setHorizontalTextPosition(SwingConstants.CENTER);


        jLabel3.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel3.setText("Value");

        jLabel4.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel4.setText("Verification Message");

        addButton.setText("Add");


        textLabel.setHorizontalAlignment(SwingConstants.CENTER);
        textLabel.setText("Text");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 915, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(textLabel, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(textField, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                                                .addComponent(action, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                                                .addGap(35, 35, 35)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(stringType, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE))
                                                .addGap(31, 31, 31)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(valueField, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(verificationMessageField)
                                                        .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(37, 37, 37)
                                                .addComponent(addButton, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(action, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(stringType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addButton)
                                        .addComponent(valueField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(verificationMessageField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(textLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
        );


        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        GUI gui = new GUI();
        gui.setVisible(true);
        gui.setActionList(Tags.getInstance().getActionNames());
        gui.setChild1List(Tags.getInstance().getStringType());
    }

    public void setActionList(ArrayList<String> data) {
        action.setModel(new DefaultComboBoxModel<>(data.toArray()));
    }

    public void setChild1List(ArrayList<String> data) {
        stringType.setModel(new DefaultComboBoxModel<>(data.toArray()));
    }

    public void addTableRow(ArrayList<String> row) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.addRow(row.toArray());
    }

    public String getAction() {
        return action.getSelectedItem().toString();
    }

    public String getStringType() {
        return stringType.getSelectedItem().toString();
    }

    public String getValue() {
        return valueField.getText();
    }

    public String getVerificationMessage() {
        return verificationMessageField.getText();
    }

    public String getText() {
        return textField.getText();
    }

}
